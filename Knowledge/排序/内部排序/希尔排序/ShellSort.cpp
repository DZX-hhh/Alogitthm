#include<bits/stdc++.h>
using namespace std;

/*
希尔排序
本质就是通过增量di,,不断分组成子表,,然后对子表内元素插入排序
最终的子表就是本身,,并且基本有序
这个时候使用插入排序,,属于很好的情况
*/
void ShellSort(int A[], int n) {
	int d, i, j;
	//A[0]只是暂存单元,不是哨兵,,当j<=0,插入位置已到
	for (d = n / 2; d >= 1; d = d / 2) {//增量di变化
		for (i = 1 + d; i <= n; i++) {//根据增量d分组子表,,每次i++则跳转到另一个子表的不同元素
			if (A[i] < A[i - d]) {//前驱距离为d,因此为i-d,需要插入排序
				A[0] = A[i];//暂存在A[0],,这里A[0]并不是哨兵,,因为子表开头j-d可能小于0
				for (j = i - d;j > 0 && A[0] < A[j];j -= d) {
					A[j + d] = A[j];//记录后移,,查找插入的位置
				}
				A[j + d] = A[0];
			}
		}
	}
}

// 空间复杂度:O(1)

// 时间复杂度:和增项序列有关,,无法数学证明
//           最坏时间复杂度:O(n²)::和直接插入排序一样
//           某些情况可以到O(n₁∙₃)